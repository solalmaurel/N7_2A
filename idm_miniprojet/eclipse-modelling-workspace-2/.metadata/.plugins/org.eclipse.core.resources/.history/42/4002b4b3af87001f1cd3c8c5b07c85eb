-- @path SimplePDL=/SimplePDL/SimplePDL.ecore
-- @path TM=/TaskMaster/TaskMaster.ecore

module taskmaster;
create OUT : TM from IN : SimplePDL;

rule Process2EventBundle {
	from process : SimplePDL!Process
	to bundle : TM!EventBundle(name <- process.name)
}

rule WD2Task {
	from wd : SimplePDL!WorkDefinition
	to event_start : TM!Event(name <- wd.name + '_start'),
		event_finish: TM!Event(name <- wd.name + '_finish'),
		finish_after_start: TM!Causal(event <- event_finish, target <- event_start)
}

helper context SimplePDL!ProcessElement
def: getProcess() : SimplePDL!Process =
	SimplePDL!Process.allInstances()->select(e | e.processElements->includes(self));

rule WD2Task {
	from wd : SimplePDL!WorkDefinition
	to
		event_start : TM!Event(bundle <- wd.getProcess(), name <- wd.name + '_start'),
		event_finish: TM!Event(bundle <- wd.getProcess(), name <- wd.name + '_finish'),
		finish_after_start: TM!Causal(event <- event_finish, target <- event_start)
}